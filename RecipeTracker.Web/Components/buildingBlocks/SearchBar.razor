@rendermode InteractiveServer

<div class="search-bar">
	<input type="text" @bind="Query" @bind:event="oninput"
	       placeholder="@Translations["SearchBar.SearchPrompt"]"
	       class="search-input" @onkeydown="HandleKeyPress"
	       aria-label="@Translations["SearchBar.SearchLabel"]" />

	<button @onclick="TriggerSearch" class="search-button" disabled="@IsLoading"
	        aria-label="@Translations["SearchBar.SearchButtonLabel"]">
		@(IsLoading
			? Translations["SearchBar.Loading"]
			: Translations["SearchBar.SearchButton"])
	</button>
</div>

@code {
	[Parameter] public string Query { get; set; } = string.Empty;
	[Parameter] public EventCallback<string> OnSearch { get; set; }
	[Parameter] public bool IsLoading { get; set; } = false;
	[Parameter, EditorRequired] public IReadOnlyDictionary<string, string> Translations { get; set; } = new Dictionary<string, string>();

	private void HandleKeyPress(KeyboardEventArgs e)
	{
		if (e.Key == "Enter")
		{
			TriggerSearch();
		}
	}

	private void TriggerSearch()
	{
		if (!IsLoading)
		{
			OnSearch.InvokeAsync(Query);
		}
	}
}